{
  "info": {
    "name": "Enrich",
    "description": "API collection for testing the multi-vendor data fetch service",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "Create Job",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": 123,\n  \"data\": {\n    \"field1\": \"value1\",\n    \"field2\": \"value2\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/jobs",
          "host": ["{{baseUrl}}"],
          "path": ["jobs"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has request_id\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('request_id');",
              "    pm.globals.set('requestId', jsonData.request_id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Job Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/jobs/{{requestId}}",
          "host": ["{{baseUrl}}"],
          "path": ["jobs", "{{requestId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('status');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Async Vendor Webhook",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"requestId\": \"{{requestId}}\",\n  \"result\": {\n    \"processedData\": \"webhook result\",\n    \"timestamp\": \"2024-01-15T10:30:00Z\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/vendor-webhook/async",
          "host": ["{{baseUrl}}"],
          "path": ["vendor-webhook", "async"]
        }
      }
    }
  ]
}
